"""Models and database functions for this app."""
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

{% for table in kwargs['tables_camelcase'] -%}
    class {{ table ~ "(db.Model):" }}
    {% set tname = kwargs['tables'][loop.index0] -%}
    __tablename__ = {{ "'" ~ tname ~ "'" }}

    id = db.Column(db.Integer, autoincrement=True, primary_key=True)
    {% for field in kwargs[tname]['tschema'] -%}
        {%- set fieldprops = kwargs[tname]['tschema'][field] -%}
        {%- if fieldprops['input_type'] == "Integer" -%}
        {{ field ~ " = db.Column(db.Integer, nullable=True)" }}
        {%- elif fieldprops['input_type'] == "Boolen" -%}
        {{ field ~ " = db.Column(db.Boolean, nullable=True, default=False)" }}
        {%- elif fieldprops['input_type'] == "Text" -%}
        {{ field ~ " = db.Column(db.Text, nullable=True)" }}
        {%- else -%}
        {{ field ~ " = db.Column(db.String(50), nullable=True)" }}
        {%- endif %}
    {% endfor %}
    def __repr__(self):
        """{{ table }} info"""
        return f'<{{ table }} id={self.id}>'
{% endfor %}

{% raw %}
def connect_to_db(app):
    """Connect the database to our Flask app."""

    # Configure to use our PostgreSQL database
    app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://postgres@localhost:5433/generatedapp'
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    app.config['SQLALCHEMY_ECHO'] = False
    db.app = app
    db.init_app(app)


if __name__ == "__main__":
    from flask import Flask
    app = Flask(__name__)

    connect_to_db(app)
    print("Connected to DB.")
{% endraw %}
